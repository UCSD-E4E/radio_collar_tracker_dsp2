from radio_collar_tracker_dsp2 import PingFinder

def test_import():
    assert(True)
    assert(hasattr(PingFinder, "__init__"))
    pf = PingFinder()
    assert(pf is not None)
    assert(hasattr(pf, "gain"))
    assert(isinstance(pf.gain, float))
    assert(hasattr(pf, "sampling_rate"))
    assert(isinstance(pf.sampling_rate, int))
    assert(hasattr(pf, "rx_frequency"))
    assert(isinstance(pf.rx_frequency, int))
    assert(hasattr(pf, "run_num"))
    assert(isinstance(pf.run_num, int))
    assert(hasattr(pf, "test_config"))
    assert(isinstance(pf.test_config, bool))
    assert(hasattr(pf, "data_dir"))
    assert(isinstance(pf.data_dir, str))
    assert(hasattr(pf, "test_data"))
    assert(isinstance(pf.test_data, str))
    assert(hasattr(pf, "ping_width_ms"))
    assert(isinstance(pf.ping_width_ms, int))
    assert(hasattr(pf, "ping_min_snr"))
    assert(isinstance(pf.ping_min_snr, float))
    assert(hasattr(pf, "ping_max_len_mult"))
    assert(isinstance(pf.ping_max_len_mult, float))
    assert(hasattr(pf, "ping_min_len_mult"))
    assert(isinstance(pf.ping_min_len_mult, float))
    assert(hasattr(pf, "target_frequencies"))
    assert(isinstance(pf.target_frequencies, list))
    assert(hasattr(pf, "start"))
    assert(hasattr(pf, "stop"))
