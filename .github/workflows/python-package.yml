# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  workflow_dispatch:
  push:
    tags: [ "*" ]
    branches: [ "*"]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    - name: Set up APT repositories
      run: |
        sudo add-apt-repository -y ppa:ettusresearch/uhd
        sudo apt update
    - name: Install APT dependencies
      run: |
        sudo apt-get install -y libboost-all-dev python3-pip python3-mako python3-venv libusb-1.0-0-dev cmake build-essential pkg-config libfftw3-dev python3-dev libuhd-dev uhd-host libc-bin=2.31 libc6=2.31
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -U six requests pyserial wheel
        git clone --depth 1 https://github.com/airspy/airspyone_host.git /tmp/airspyone_host
        git clone --depth 1 https://github.com/greatscottgadgets/hackrf.git /tmp/hackrf
        git clone --depth 1 https://github.com/UCSD-E4E/radio_collar_tracker_comms /tmp/radio_collar_tracker_comms
        mkdir /tmp/airspyone_host/build
        mkdir /tmp/hackrf/host/build

        cd /tmp/hackrf/host/build
        cmake ../
        make -j
        sudo make install
        sudo ldconfig
        
        cd /tmp/airspyone_host/build
        cmake ../ -DINSTALL_UDEV_RULES=ON
        make -j
        sudo make install
        sudo ldconfig

        python -m pip install -U wheel
        cd /tmp/radio_collar_tracker_comms
        python -m pip install -U .
        cd $GITHUB_WORKSPACE
        git submodule update --init --recursive
        python setup.py bdist_wheel
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3
      with:
        # Destination path
        path: ./dist/*.whl
        
